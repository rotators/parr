name: Test

on: workflow_call

defaults:
 run:
  shell: bash

env:
 GHA_BUILD_DIR: "Build"
 GHA_BUILD_CFG: "Release"
 CTR_FUNC_NAME: "prs_test"
 CTR_CONFIG:    "SkipDependencies"

jobs:

 Configure:
  runs-on: ubuntu-latest
  outputs:
   CTestRunnerMatrixAll:         ${{ steps.CTestRunnerMatrix.outputs.matrix-all }}
   CTestRunnerMatrixExecutables: ${{ steps.CTestRunnerMatrix.outputs.matrix-executables }}
   CTestRunnerMatrixGroups:      ${{ steps.CTestRunnerMatrix.outputs.matrix-groups }}
   CTestRunnerMatrixSimple:      ${{ steps.CTestRunnerMatrix.outputs.matrix-simple }}

  steps:

  # NOTES
  # - current tests runner: ctest (handled by CMake/CTestRunner.cmake)

  - name: Clone repository
    uses: actions/checkout@v4

  - name: Build configuration
    run:  cmake -B ${{ env.GHA_BUILD_DIR }}

  - name: Show tests runner summary
    run:  cmake --build ${{ env.GHA_BUILD_DIR }} --target ${{ env.CTR_FUNC_NAME }}.help

  - name: Generate tests matrix
    id:   CTestRunnerMatrix
    run:  cmake --build ${{ env.GHA_BUILD_DIR }} --target ${{ env.CTR_FUNC_NAME }}.gha.outputs.matrix | grep "^  " | sed -e 's!^  !!' >> "$GITHUB_OUTPUT"

 # run tests in 'simple' mode (no executables, no groups)
 CTestRunnerSimple:
  needs:   Configure
  name:    ${{ matrix.os.name }} / ${{ matrix.test.job-name }}
  runs-on: ${{ matrix.os.type }}
  strategy:
   fail-fast: false
   matrix:
    os: # needs to be set before generated matrix, to keep jobs list sorted in GitHub UI
    - { name: Linux,   type: ubuntu-latest,  artifact: prs-linux }
    - { name: Windows, type: windows-latest, artifact: prs-windows }
    test: ${{ fromJSON(needs.Configure.outputs.CTestRunnerMatrixSimple) }}

  steps:

  - name: Clone repository
    uses: actions/checkout@v4

  - name: Download artifacts
    uses: actions/download-artifact@v4
    with:
     name: ${{ matrix.os.artifact }}
     path: ${{ env.GHA_BUILD_DIR }}

  - name: Prepare artifacts
    run:  |
          :
          if [[ "$RUNNER_OS" == 'Windows' ]]; then
             # move executables to VS output directory
             mkdir -p ${{ env.GHA_BUILD_DIR }}/${{ env.GHA_BUILD_CFG }}
             mv --verbose ${{ env.GHA_BUILD_DIR }}/*.exe ${{ env.GHA_BUILD_DIR }}/${{ env.GHA_BUILD_CFG }}
          else
             # https://github.com/actions/upload-artifact/blob/main/README.md#permission-loss
             # https://github.com/actions/download-artifact/blob/main/README.md#permission-loss
             chmod --verbose +x ${{ env.GHA_BUILD_DIR }}/*
          fi

  - name: Build configuration
    run:  cmake -B ${{ env.GHA_BUILD_DIR }} -D "CTestRunner.Config=${{ env.CTR_CONFIG }}"

  - name: Run tests (using target ${{ matrix.test.job-target }})
    run:  cmake --build ${{ env.GHA_BUILD_DIR }} --config ${{ env.GHA_BUILD_CFG }} --target ${{ matrix.test.job-target }}

  - name: Show tests log
    if:   always()
    run:  cmake -E cat ${{ env.GHA_BUILD_DIR }}/Test/Testing/Temporary/LastTest.log || true

 CTestRunnerTest:
  needs:   Configure
  if:      needs.Configure.outputs.CTestRunnerMatrixGroups
  runs-on: ubuntu-latest

  steps:

  - run: echo "<${{ needs.Configure.outputs.CTestRunnerMatrixGroups}}>"
