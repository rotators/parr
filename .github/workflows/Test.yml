name: Test

on: workflow_call

env:
 GHA_BUILD_DIR: "Build"
 GHA_BUILD_CFG: "Release"
 GHA_FUNC_NAME: "prs_test"

jobs:

 Config:
  runs-on: 'ubuntu-latest'
  outputs:
   matrix: ${{ steps.matrix.outputs.matrix }}

  steps:

  # NOTES
  # - current tests runner: ctest (handled by CMake/CTestRunner.cmake)

  - name: Clone repository
    uses: actions/checkout@v3

  - name: Build configuration
    run:  cmake -B ${{ env.GHA_BUILD_DIR }}

  - name: Show tests runner summary
    run:  cmake --build ${{ env.GHA_BUILD_DIR }} --target ${{ env.GHA_FUNC_NAME }}.help

  - name: Generate tests matrix
    id:   matrix
    run:  echo "matrix=$(cmake --build ${{ env.GHA_BUILD_DIR }} --target ${{ env.GHA_FUNC_NAME }}.gha.matrix | grep "job-target" | sed -e 's!^  !!')" >> "$GITHUB_OUTPUT"

 Run:
  needs:   Config
  name:    ${{ matrix.os.name }} / ${{ matrix.cfg.job-name }}
  runs-on: ${{ matrix.os.type }}
  strategy:
   fail-fast: false
   matrix:
    os:
    - { name: Linux,   type: ubuntu-latest,  artifact: prs-linux }
    - { name: Windows, type: windows-latest, artifact: prs-windows }
    cfg: ${{ fromJSON(needs.Config.outputs.matrix) }}

  steps:

  - name: Clone repository
    uses: actions/checkout@v3

  - name: Download artifact
    uses: actions/download-artifact@v3
    with:
     name: ${{ matrix.os.artifact }}
     path: ${{ env.GHA_BUILD_DIR }}

  - name: Prepare artifact
    run:  |
          :
          if [[ "$RUNNER_OS" == 'Windows' ]]; then
             # move executables to output directory
             mkdir -p "${{ env.GHA_BUILD_DIR }}/${{ env.GHA_BUILD_CFG }}"
             mv --verbose "${{ env.GHA_BUILD_DIR }}/*.exe" "${{ env.GHA_BUILD_DIR }}/${{ env.GHA_BUILD_CFG }}"
          else
             # upload-artifact/download-artifact breaks file permissions
             chmod --verbose +x "${{ env.GHA_BUILD_DIR }}/*"
          fi

  - name: Build configuration
    run:  cmake -B ${{ env.GHA_BUILD_DIR }} -D "CTestRunner.Config=SkipDependencies"

  - name: Run test (${{ matrix.cfg.job-target }})
    run:  cmake --build ${{ env.GHA_BUILD_DIR }} --config ${{ env.GHA_BUILD_CFG }} --target ${{ matrix.cfg.job-target }}
